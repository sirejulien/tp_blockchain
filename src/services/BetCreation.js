import betContract from './betContract.json'

export const createBet = async (_arbitre,_parieurA,_parieurB,_montant,_sujet) => {
    
const ethers = require('ethers');

(async () => {
  // Deploy the contract to Ethereum test network - Ropsten
  const provider = ethers.providers.getDefaultProvider('ropsten')

  // Use your wallet's private key to deploy the contract
  const privateKey = 'df3d86dae85ad1bd1859e7345679fe0cc53dbabfb97ca9eb3ddcca0d557bc7d7' //private key metamask
  const wallet = new ethers.Wallet(privateKey, provider)

  // Read the contract artifact, which was generated by Remix
  const metadata = JSON.parse(betContract)

  // Set gas limit and gas price, using the default Ropsten provider
  const price = ethers.utils.formatUnits(await provider.getGasPrice(), 'gwei')
  const options = {gasLimit: 100000, gasPrice: ethers.utils.parseUnits(price, 'gwei')}

  // Deploy the contract
  const factory = new ethers.ContractFactory(metadata.abi, metadata.data.bytecode.object, wallet)
  const contract = await factory.deploy(_arbitre,_parieurA,_parieurB,_montant,_sujet,options)
  await contract.deployed()
  alert(`Deployment successful! Contract Address: ${contract.address}`)
  console.log(`Deployment successful! Contract Address: ${contract.address}`)
})()
    
}